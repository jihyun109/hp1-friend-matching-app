plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.hp1'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // jjwt-api
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5' // jjwt-impl
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'jakarta.mail:jakarta.mail-api:2.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'


	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('buildZip', Zip) {
	from compileJava
	from processResources
	into('lib') {
		from(configurations.compileClasspath) {
			exclude 'tomcat-embed-*'
		}
	}
}

build {
	dependsOn buildZip
}